name: Destroy Infrastructure

on:
  workflow_dispatch:
    inputs:
      confirmation:
        description: 'Type "destroy" to confirm destruction of all resources'
        required: true

jobs:
  destroy:
    name: Destroy Infrastructure
    runs-on: ubuntu-latest
    environment: production
    
    # Only run if the confirmation input equals "destroy"
    if: ${{ github.event.inputs.confirmation == 'destroy' }}
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ca-central-1

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    # Destroy Phase 2 resources first
    - name: Terraform Init (Phase 2)
      id: init-phase2
      run: |
        cd ./terraform-phase2
        terraform init \
          -backend-config="bucket=capstonebucketcloud2025" \
          -backend-config="key=production/phase2/terraform.tfstate" \
          -backend-config="region=ca-central-1"
      shell: bash

    - name: Terraform Destroy (Phase 2)
      id: destroy-phase2
      run: |
        cd ./terraform-phase2
        terraform destroy -auto-approve
      shell: bash
      continue-on-error: true

    # Destroy Phase 1 resources second
    - name: Terraform Init (Phase 1)
      id: init-phase1
      run: |
        cd ./terraform-phase1
        terraform init \
          -backend-config="bucket=capstonebucketcloud2025" \
          -backend-config="key=production/terraform.tfstate" \
          -backend-config="region=ca-central-1"
      shell: bash

    - name: Terraform Destroy (Phase 1)
      id: destroy-phase1
      run: |
        cd ./terraform-phase1
        terraform destroy -auto-approve
      shell: bash

    # Clean up S3 bucket if needed
    - name: Clean up S3 Terraform state (optional)
      if: ${{ always() && github.event.inputs.confirmation == 'destroy' }}
      run: |
        # Remove terraform state files from S3
        aws s3 rm s3://capstonebucketcloud2025/production/terraform.tfstate
        aws s3 rm s3://capstonebucketcloud2025/production/phase2/terraform.tfstate
        # Uncomment the following line if you want to delete the bucket itself
        # aws s3 rb s3://capstonebucketcloud2025 --force
      shell: bash
      continue-on-error: true 